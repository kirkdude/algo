#!/bin/bash
# Validate post-quantum algorithms in strongSwan
# Generated by Algo VPN quantum-safe role

set -euo pipefail

STRONGSWAN_BIN="{{ strongswan_install_dir }}/sbin"
SWANCTL_BIN="{{ strongswan_install_dir }}/sbin/swanctl"

echo "=== strongSwan Post-Quantum Algorithm Validation ==="

# Check if strongSwan is installed
IPSEC_BINARY=""
if [ -f "${STRONGSWAN_BIN}/ipsec" ]; then
    IPSEC_BINARY="${STRONGSWAN_BIN}/ipsec"
elif [ -f "{{ strongswan_install_dir }}/strongswan-oqs/src/ipsec" ]; then
    IPSEC_BINARY="{{ strongswan_install_dir }}/strongswan-oqs/src/ipsec"
    echo "Using strongSwan binary from build directory"
elif [ -f "/usr/local/sbin/ipsec" ]; then
    IPSEC_BINARY="/usr/local/sbin/ipsec"
elif [ -f "/usr/sbin/ipsec" ]; then
    IPSEC_BINARY="/usr/sbin/ipsec"
elif command -v ipsec >/dev/null 2>&1; then
    IPSEC_BINARY="ipsec"
fi

if [ -z "$IPSEC_BINARY" ]; then
    echo "ERROR: strongSwan binary not found"
    echo "Checked locations:"
    echo "  - ${STRONGSWAN_BIN}/ipsec"
    echo "  - {{ strongswan_install_dir }}/strongswan-oqs/src/ipsec"
    echo "  - /usr/local/sbin/ipsec"
    echo "  - /usr/sbin/ipsec"
    echo "  - PATH"
    exit 1
fi

echo "strongSwan Version:"
"$IPSEC_BINARY" version
echo

# Update swanctl binary location based on ipsec location
SWANCTL_BINARY=""
if [ -f "${SWANCTL_BIN}" ]; then
    SWANCTL_BINARY="${SWANCTL_BIN}"
elif [ -f "$(dirname "$IPSEC_BINARY")/swanctl" ]; then
    SWANCTL_BINARY="$(dirname "$IPSEC_BINARY")/swanctl"
elif command -v swanctl >/dev/null 2>&1; then
    SWANCTL_BINARY="swanctl"
fi

echo "Available Key Exchange Algorithms:"
if [ -n "$SWANCTL_BINARY" ]; then
    "$SWANCTL_BINARY" --list-algs | grep -E "(kem|KEM|ML-KEM|mlkem)" || echo "No ML-KEM algorithms found"
else
    echo "swanctl binary not found, cannot check algorithms"
fi
echo

echo "Plugin Status:"
"$IPSEC_BINARY" statusall | grep -E "(oqs|ml|openssl)" || echo "Post-quantum plugins not loaded"
echo

# Test ML-KEM algorithm availability
echo "Testing ML-KEM Algorithm Support:"
{% for algorithm in quantum_safe_algorithms.ml_kem %}
echo "- {{ algorithm }}"
{% endfor %}

# Verify LibOQS library is accessible
if [ -f "/usr/local/lib/liboqs.so" ]; then
    echo "✓ LibOQS library found at /usr/local/lib/liboqs.so"
    if [ -f "{{ strongswan_install_dir }}/lib/ipsec/plugins/libstrongswan-oqs.so" ]; then
        ldd "{{ strongswan_install_dir }}/lib/ipsec/plugins/libstrongswan-oqs.so" | grep oqs || echo "⚠ LibOQS not linked properly"
    else
        echo "⚠ strongSwan OQS plugin not found at expected location"
    fi
else
    echo "✗ LibOQS library not found"
    exit 1
fi

echo "=== Validation Complete ==="
