# Quantum-Safe strongSwan Client Configuration
# Generated by Algo VPN quantum-safe role
# Requires strongSwan 6.0+ with LibOQS support

conn algovpn-pq-{{ IP_subject_alt_name }}
    # Connection parameters
    fragmentation=yes
    rekey=no
    dpdaction=clear
    keyexchange=ikev2
    compress=no
    dpddelay=35s
    lifetime=3h
    ikelifetime=12h

{% if quantum_safe_mode == 'hybrid' %}
    # Hybrid classical + post-quantum algorithms
    ike={{ ciphers.quantum_safe.hybrid.ike }}
    esp={{ ciphers.quantum_safe.hybrid.esp }}
{% elif quantum_safe_mode == 'pure_pq' %}
    # Pure post-quantum algorithms
    ike={{ ciphers.quantum_safe.pure_pq.ike }}
    esp={{ ciphers.quantum_safe.pure_pq.esp }}
{% else %}
    # Fallback classical algorithms
    ike={{ ciphers.defaults.ike }}
    esp={{ ciphers.defaults.esp }}
{% endif %}

    # Server configuration
    right={{ IP_subject_alt_name }}
    rightid={{ IP_subject_alt_name }}
    rightsubnet=0.0.0.0/0
    rightauth=pubkey

    # Client configuration
    leftsourceip=%config
    leftauth=pubkey
    leftcert={{ item }}.crt
    leftfirewall=yes
    left=%defaultroute

    # Auto-start
    auto=add

# Fallback connection for compatibility
conn algovpn-fallback-{{ IP_subject_alt_name }}
    fragmentation=yes
    rekey=no
    dpdaction=clear
    keyexchange=ikev2
    compress=no
    dpddelay=35s

    # Classical algorithms only
    ike={{ ciphers.defaults.ike }}
    esp={{ ciphers.defaults.esp }}

    right={{ IP_subject_alt_name }}
    rightid={{ IP_subject_alt_name }}
    rightsubnet=0.0.0.0/0
    rightauth=pubkey

    leftsourceip=%config
    leftauth=pubkey
    leftcert={{ item }}.crt
    leftfirewall=yes
    left=%defaultroute

    auto=add
