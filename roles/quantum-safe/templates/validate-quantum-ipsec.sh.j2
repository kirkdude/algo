#!/bin/bash
# Quantum-safe strongSwan validation script
# Generated by Algo VPN quantum-safe role

set -euo pipefail

echo "=== strongSwan Quantum-Safe Validation ==="

# Check strongSwan version
echo "Checking strongSwan version..."
STRONGSWAN_VERSION="$({{ strongswan_install_dir }}/sbin/ipsec version | head -1)"
echo "strongSwan Version: $STRONGSWAN_VERSION"

if ! echo "$STRONGSWAN_VERSION" | grep -q "6\.0"; then
    echo "ERROR: strongSwan 6.0+ required for quantum-safe support"
    exit 1
fi

echo "✓ strongSwan version check passed"

# Check LibOQS library
echo "Checking LibOQS library..."
if [[ ! -f "/usr/local/lib/liboqs.so" ]]; then
    echo "ERROR: LibOQS library not found at /usr/local/lib/liboqs.so"
    exit 1
fi

echo "LibOQS version: $({{ liboqs_install_dir }}/bin/oqs_test --version 2>/dev/null || echo 'Version check not available')"
echo "✓ LibOQS library found"

# Check plugin loading
echo "Checking quantum-safe plugins..."
PLUGINS_OUTPUT="$({{ strongswan_install_dir }}/sbin/ipsec statusall 2>/dev/null || true)"

if echo "$PLUGINS_OUTPUT" | grep -q "plugin 'oqs'"; then
    echo "✓ OQS plugin loaded successfully"
else
    echo "⚠ OQS plugin not detected in status output"
fi

if echo "$PLUGINS_OUTPUT" | grep -q "plugin 'ml'"; then
    echo "✓ ML plugin loaded successfully"
else
    echo "⚠ ML plugin not detected in status output"
fi

# Check algorithm availability
echo "Checking available algorithms..."
ALGORITHMS="$({{ strongswan_install_dir }}/sbin/swanctl --list-algs 2>/dev/null || echo 'Algorithm list not available')"

{% for algorithm in quantum_safe_algorithms.ml_kem %}
if echo "$ALGORITHMS" | grep -qi "{{ algorithm.lower() }}\|mlkem"; then
    echo "✓ {{ algorithm }} algorithm available"
else
    echo "⚠ {{ algorithm }} algorithm not detected"
fi
{% endfor %}

# Test configuration syntax
echo "Testing configuration syntax..."
CONFIG_TEST="{{ strongswan_install_dir }}/sbin/swanctl --load-all --dry-run 2>&1" || true
if [[ $? -eq 0 ]]; then
    echo "✓ Configuration syntax validation passed"
else
    echo "⚠ Configuration syntax issues detected:"
    echo "$CONFIG_TEST"
fi

# Test algorithm proposals
echo "Testing quantum-safe proposals..."
TEST_PROPOSALS=(
{% if quantum_safe_mode == 'hybrid' %}
    "{{ ciphers.quantum_safe.hybrid.ike }}"
    "{{ ciphers.quantum_safe.hybrid.esp }}"
{% else %}
    "{{ ciphers.defaults.ike }}"
    "{{ ciphers.defaults.esp }}"
{% endif %}
)

for proposal in "${TEST_PROPOSALS[@]}"; do
    if {{ strongswan_install_dir }}/sbin/swanctl --list-algs | grep -qi "$(echo "$proposal" | cut -d- -f4)" 2>/dev/null; then
        echo "✓ Proposal supported: $proposal"
    else
        echo "⚠ Proposal may not be supported: $proposal"
    fi
done

# Summary
echo ""
echo "=== Validation Summary ==="
echo "strongSwan: {{ strongswan_version }}"
echo "LibOQS: {{ liboqs_version }}"
echo "Mode: {{ quantum_safe_mode }}"
echo "Security Level: {{ quantum_safe_security_level }}"
echo "Default Algorithm: {{ default_security_level }}"

echo ""
echo "✓ Quantum-safe strongSwan validation completed"
echo "Ready for hybrid classical + post-quantum IPsec connections"
