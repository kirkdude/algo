---
# Validation tasks for quantum-safe installation

- name: Validate liboqs installation
  stat:
    path: "/usr/local/lib/liboqs.{{ 'so' if liboqs_shared_libs else 'a' }}"
  register: liboqs_lib_check

- name: Ensure liboqs library exists
  assert:
    that: liboqs_lib_check.stat.exists
    msg: "liboqs library not found at expected location"

- name: Test liboqs shared library loading
  command: ldd "/usr/local/lib/liboqs.so"
  register: liboqs_ldd_check
  changed_when: false
  when: liboqs_shared_libs

- name: Check if quantum-safe environment script exists
  stat:
    path: /etc/profile.d/quantum-safe.sh
  register: env_script_check

- name: Display environment script status
  debug:
    msg: "Environment script exists: {{ env_script_check.stat.exists }}"

- name: Read environment script content for validation
  slurp:
    src: /etc/profile.d/quantum-safe.sh
  register: env_script_content
  when: env_script_check.stat.exists

- name: Check if environment script contains expected variables
  set_fact:
    script_has_build_dir: "{{ 'LIBOQS_BUILD_DIR=' in (env_script_content.content | b64decode) }}"
    script_has_install_dir: "{{ 'LIBOQS_INSTALL_DIR=' in (env_script_content.content | b64decode) }}"
  when: env_script_check.stat.exists and env_script_content is defined

- name: Display environment variable check results
  debug:
    msg:
      - "Environment script exists: {{ env_script_check.stat.exists }}"
      - "Script has LIBOQS_BUILD_DIR: {{ script_has_build_dir | default('N/A') }}"
      - "Script has LIBOQS_INSTALL_DIR: {{ script_has_install_dir | default('N/A') }}"
      - "Expected build dir: {{ liboqs_build_dir | default('/opt/liboqs/build') }}"
      - "Script content preview: {{ (env_script_content.content | b64decode)[:200] | default('N/A') }}..."

- name: Skip environment variable validation if script missing
  debug:
    msg: "Skipping environment variable validation - script not found"
  when: not env_script_check.stat.exists

- name: Create environment script if missing variables
  copy:
    content: |
      #!/bin/bash
      # Quantum-safe cryptography environment variables

      # liboqs paths
      export LIBOQS_INSTALL_DIR="/opt/liboqs"
      export LIBOQS_BUILD_DIR="/opt/liboqs/build"

      # Library paths
      export LD_LIBRARY_PATH="/usr/local/lib:/opt/liboqs/build/lib:$LD_LIBRARY_PATH"
      export PKG_CONFIG_PATH="/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH"

      # strongSwan paths
      export STRONGSWAN_INSTALL_DIR="/opt/strongswan"
      export STRONGSWAN_BUILD_DIR="/opt/strongswan/build"

      # Quantum-safe configuration
      export QUANTUM_SAFE_MODE="enabled"
      export QUANTUM_SAFE_TESTING="enabled"
      export QUANTUM_SAFE_LOGGING="info"
    dest: /etc/profile.d/quantum-safe.sh
    mode: '0644'
  when: env_script_check.stat.exists and (script_has_build_dir is not defined or not script_has_build_dir)

- name: Re-read environment script after creation
  slurp:
    src: /etc/profile.d/quantum-safe.sh
  register: env_script_final
  when: env_script_check.stat.exists

- name: Verify final script contains required variables
  set_fact:
    final_has_build_dir: "{{ 'LIBOQS_BUILD_DIR=' in (env_script_final.content | b64decode) }}"
  when: env_script_check.stat.exists and env_script_final is defined

- name: Ensure environment variables are set
  assert:
    that:
      - (script_has_build_dir is defined and script_has_build_dir) or (final_has_build_dir is defined and final_has_build_dir)
    msg: >-
      Quantum-safe environment script does not contain required LIBOQS_BUILD_DIR variable.
      Script exists: {{ env_script_check.stat.exists }},
      Original has var: {{ script_has_build_dir | default('undefined') }},
      Final has var: {{ final_has_build_dir | default('undefined') }}
  when: env_script_check.stat.exists

- name: Run basic algorithm availability test
  command: >
    python3 -c "import ctypes; lib = ctypes.CDLL('/usr/local/lib/liboqs.so'); print('Algorithm test: Library loaded successfully')"
  register: basic_test
  changed_when: false

- name: Ensure basic algorithm test passes
  assert:
    that: basic_test.rc == 0
    msg: "Basic quantum-safe algorithm test failed"

- name: Validate configuration files
  stat:
    path: /opt/quantum-safe/liboqs-config.yaml
  register: config_file_check

- name: Ensure configuration file exists
  assert:
    that: config_file_check.stat.exists
    msg: "Quantum-safe configuration file not found"

- name: Validate YAML configuration syntax
  command: python3 -c "import yaml; yaml.safe_load(open('/opt/quantum-safe/liboqs-config.yaml'))"
  changed_when: false

- name: Check test infrastructure
  stat:
    path: "{{ item }}"
  register: test_files
  loop:
    - /opt/quantum-safe/tests/test-liboqs-algorithms.sh
    - /opt/quantum-safe/tests/run-all-tests.sh

- name: Ensure test files are executable
  assert:
    that: item.stat.executable
    msg: "Test file {{ item.item }} is not executable"
  loop: "{{ test_files.results }}"

- name: Display validation summary
  debug:
    msg: |
      Quantum-safe installation validation completed successfully:
      ✅ liboqs library installed and functional
      ✅ Environment variables configured
      ✅ Basic algorithm test passed
      ✅ Configuration files valid
      ✅ Test infrastructure ready

      Ready for quantum-safe development!
