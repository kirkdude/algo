---
# Quantum-safe cipher suite configurations
# Based on strongSwan 6.0+ ML-KEM support and NIST recommendations

# Quantum-safe operating modes
quantum_safe_mode: "hybrid"  # hybrid, pure_pq, classical

# Extended cipher suite definitions for quantum-safe support
ciphers:
  defaults:
    # Classical cipher suites (unchanged)
    ike: aes256gcm16-prfsha512-ecp384!
    esp: aes256gcm16-ecp384!

  quantum_safe:
    # Hybrid classical + post-quantum configurations
    hybrid:
      # ML-KEM-768 provides 192-bit security (Cat 3)
      # Combined with ECP-384 for transitional security
      ike: aes256gcm16-prfsha512-ecp384-ke1_mlkem768!
      esp: aes256gcm16-sha256!

      # Alternative configurations for different security levels
      high_security:
        # ML-KEM-1024 provides 256-bit security (Cat 5)
        # CNSA 2.0 compliant
        ike: aes256gcm16-prfsha512-ecp384-ke1_mlkem1024!
        esp: aes256gcm16-sha256!

      multi_ke:
        # Multiple key exchange for enhanced security
        # ECP-384 + ML-KEM-768 + ML-KEM-1024
        ike: aes256gcm16-prfsha512-ecp384-ke1_mlkem768-ke2_mlkem1024!
        esp: aes256gcm16-sha256!

    # Pure post-quantum configurations (future)
    pure_pq:
      # Pure ML-KEM (when supported by clients)
      ike: aes256gcm16-prfsha512-mlkem768!
      esp: aes256gcm16-sha256!

      high_security:
        ike: aes256gcm16-prfsha512-mlkem1024!
        esp: aes256gcm16-sha256!

# Algorithm mapping for different security requirements
security_profiles:
  standard:
    ml_kem: "mlkem768"
    classical: "ecp384"
    description: "192-bit security, recommended default"

  high:
    ml_kem: "mlkem1024"
    classical: "ecp384"
    description: "256-bit security, CNSA 2.0 compliant"

  conservative:
    ml_kem: "mlkem512"
    classical: "ecp256"
    description: "128-bit security, maximum compatibility"

# Client compatibility matrix
client_compatibility:
  strongswan_linux:
    supports_ml_kem: true
    supported_algorithms: ["mlkem512", "mlkem768", "mlkem1024"]
    hybrid_support: true

  android_strongswan:
    supports_ml_kem: false  # Future support
    supported_algorithms: []
    hybrid_support: false
    fallback_required: true

  ios_native:
    supports_ml_kem: false  # Awaiting Apple implementation
    supported_algorithms: []
    hybrid_support: false
    fallback_required: true

  windows_native:
    supports_ml_kem: false  # Awaiting Microsoft implementation
    supported_algorithms: []
    hybrid_support: false
    fallback_required: true

# Performance impact estimates (based on benchmarks)
performance_impact:
  mlkem768:
    cpu_overhead: "2.3x"
    memory_overhead: "12.1%"
    data_overhead: "37x larger keys"
    recommendation: "acceptable for most deployments"

  mlkem1024:
    cpu_overhead: "2.5x"
    memory_overhead: "15.2%"
    data_overhead: "49x larger keys"
    recommendation: "high security environments only"
